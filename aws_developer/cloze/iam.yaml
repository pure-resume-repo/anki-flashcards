"IAM 1": "A {{c1::report}} that {{c1::lists all the account's users}} and the {{c1::status}} of their various {{c1::credentials}}. It is {{c1::account-level}}."
"IAM 2": "{{c1::Shows}} the {{c1::service permissions}} granted to a {{c1::user}} and when those {{c1::services}} were last {{c1::accessed}}. Useful for {{c1::revising policies}}."
"IAM 3": "{{c1::AWS}} is responsible for the {{c1::infrastructure}} and {{c1::network security}}, {{c1::configuration}} and {{c1::vulnerability analysis}}, and {{c1::compliance validation}}."
"IAM 4": "The {{c1::user}} is responsible for {{c1::managing}} and {{c1::monitoring}} users, groups, roles, {{c1::policies}}, enabling {{c1::MFA}}, rotating {{c1::keys}} often, using IAM tools for {{c1::permissions}}, and analyzing {{c1::access patterns}}."
"IAM 5": "{{c1::Grants}} {{c1::limited}} and {{c1::temporary access}} to AWS {{c1::resources}}. It includes {{c1::AssumeRole}}, {{c1::AssumeRoleWithSAML}}, {{c1::AssumeRoleWithWebIdentity}}, {{c1::GetSessionToken}}, {{c1::GetFederationToken}}, {{c10::GetCallerIdentity}}, and {{c11::DecodeAuthorizationMessage}}."
"IAM 6": "{{c1::Define}} an IAM {{c1::Role}} within your {{c1::account}} or {{c1::cross-account}} and use AWS STS to {{c1::retrieve credentials}} to {{c1::impersonate the role}} for {{c1::temporary access}}."
"IAM 7": "Use {{c1::GetSessionToken}} for {{c1::MFA-enabled}} accounts to {{c1::receive temporary credentials}} after providing additional {{c1::authentication}}."
"IAM 8": "{{c1::Assign}} specific {{c1::roles}} to EC2 instances, Lambda functions, ECS tasks, and other services to ensure the principle of {{c1::least privilege}}."
"IAM 9": "Set up IAM {{c1::roles}} for {{c1::cross-account access}} and use AWS STS for {{c1::assuming these roles}} with {{c1::temporary credentials}}."
"IAM 10": "The {{c1::evaluation process}} for policies: explicit {{c1::DENY}} overrides any {{c1::ALLOW}}, if no explicit DENY, then {{c1::ALLOW}} is granted, otherwise {{c1::DENY by default}}."
"IAM 11": "IAM Policies are attached to IAM {{c1::principals}}, while S3 Bucket Policies are attached to S3 {{c1::buckets}}. Access is {{c1::evaluated}} based on {{c1::both policies}}."
"IAM 12": "Use {{c1::dynamic policies}} to scale the assignment of {{c1::user-specific access}}, for example, using the {{c1::${aws:username}}} variable to grant users access to their own 'home' folder in {{c1::S3}}."
"IAM 13": "{{c1::AWS Managed Policies}} are maintained by AWS, {{c1::Customer Managed Policies}} are created and controlled by the customer, and {{c1::Inline Policies}} are directly attached to a single IAM {{c1::principal}}."
"IAM 14": "To allow a service to {{c1::assume a role}} and perform actions on behalf of the user, the user must have the {{c1::iam:PassRole}} permission. This is necessary during the setup of many {{c1::AWS services}}."
"IAM 15": "Roles can only be {{c1::assumed}} by services that are {{c1::specified}} in the role's {{c1::trust policy}}."
"IAM 16": "A {{c1::database}} of objects like User Accounts and Computers found on Windows Server with AD Domain Services, offering {{c1::centralized security management}}."
"IAM 17": "Allows creating an {{c1::AD}} in AWS, managing users, and establishing {{c1::trust connections}} with on-premise {{c1::AD}}."
"IAM 18": "Acts as a {{c1::gateway}} to redirect to an on-premise AD, with user management maintained {{c1::on-premise}}."
"IAM 19": "A {{c1::managed directory}} on AWS compatible with AD but cannot be {{c1::joined}} with an on-premise {{c1::AD}}."
"IAM 20": "AWS {{c1::Identity and Access Management (IAM)}} enables you to manage access to AWS services and resources securely. Using IAM, you can create and manage AWS users and groups, and use permissions to allow and deny their access to AWS resources."
